{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","css","width","height","backgroundImage","position","display","overflow","styles","boxSizing","margin","padding","fontFamily","background","flex","flexDirection","justifyContent","borderRadius","boxShadow","color","max","min","style","minHeight","maxHeight","lineHeight","fontSize","listStyleType","marginRight","content","fontWeight","marginLeft","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","document","getElementById"],"mappings":"gKA4FeA,MAvFf,WACE,OACE,mBACEC,IAAK,CACHC,MAAO,KACPC,OAAQ,IACRC,gBAAgB,gxBAChBC,SAAU,WACVC,QAAS,OACTC,SAAU,WAGZ,YAAC,IAAM,CACLC,OAAQ,CACN,IAAK,CACHC,UAAW,aACXC,OAAQ,EACRC,QAAS,EACTC,WAAY,gBAIlB,mBACEX,IAAK,CACHY,WAAY,UACZH,OAAQ,OACRJ,QAAS,OACTQ,KAAM,EACNC,cAAe,SACfC,eAAgB,gBAChBC,aAAc,OACdN,QAAS,OACTO,UAAU,yWAQZ,kBAAIjB,IAAK,CAAEkB,MAAO,UAAWhB,OAAQ,SACnC,YAAC,IAAO,CACNiB,IAAK,IACLC,IAAK,GACLC,MAAO,CACLC,UAAW,MACXC,UAAW,MACXC,WAAY,IACZ,4JAON,mBACExB,IAAK,CACHkB,MAAO,UACPb,QAAS,OACTU,eAAgB,gBAChBU,SAAU,KAGZ,kBACEzB,IAAK,CACH0B,cAAe,OACfrB,QAAS,OACT,OAAQ,CACNsB,YAAa,QACb,2BAA4B,CAC1BC,QAAS,SACTC,WAAY,MACZC,WAAY,YAKlB,+BACA,+BAEF,0CCzEKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,iBAAO,kBAAC,EAAG,MAAKC,SAASC,eAAe,SAKxCX,K","file":"static/js/main.a95c50e9.chunk.js","sourcesContent":["/** @jsx jsx */\nimport { jsx, Global } from \"@emotion/react\";\nimport Textfit from \"react-textfit\";\nimport React from \"react\";\n\nfunction App() {\n  return (\n    <div\n      css={{\n        width: 1200,\n        height: 630,\n        backgroundImage: `linear-gradient(135deg, rgba(29, 29, 29, 0.05) 0%, rgba(29, 29, 29, 0.05) 17%,rgba(27, 27, 27, 0.05) 17%, rgba(27, 27, 27, 0.05) 34%,rgba(31, 31, 31, 0.05) 34%, rgba(31, 31, 31, 0.05) 93%,rgba(242, 242, 242, 0.05) 93%, rgba(242, 242, 242, 0.05) 100%),linear-gradient(135deg, rgba(129, 129, 129, 0.05) 0%, rgba(129, 129, 129, 0.05) 66%,rgba(117, 117, 117, 0.05) 66%, rgba(117, 117, 117, 0.05) 91%,rgba(199, 199, 199, 0.05) 91%, rgba(199, 199, 199, 0.05) 100%),linear-gradient(135deg, rgba(31, 31, 31, 0.07) 0%, rgba(31, 31, 31, 0.07) 15%,rgba(139, 139, 139, 0.07) 15%, rgba(139, 139, 139, 0.07) 23%,rgba(200, 200, 200, 0.07) 23%, rgba(200, 200, 200, 0.07) 29%,rgba(102, 102, 102, 0.07) 29%, rgba(102, 102, 102, 0.07) 100%),linear-gradient(90deg, rgb(19, 196, 228),rgb(126, 8, 222));`,\n        position: \"absolute\",\n        display: \"flex\",\n        overflow: \"hidden\"\n      }}\n    >\n      <Global\n        styles={{\n          \"*\": {\n            boxSizing: \"border-box\",\n            margin: 0,\n            padding: 0,\n            fontFamily: \"system-ui\"\n          }\n        }}\n      />\n      <div\n        css={{\n          background: \"#130722\",\n          margin: \"40px\",\n          display: \"flex\",\n          flex: 1,\n          flexDirection: \"column\",\n          justifyContent: \"space-between\",\n          borderRadius: \"15px\",\n          padding: \"2rem\",\n          boxShadow: `2.8px 2.8px 2.2px rgba(0, 0, 0, 0.02),\n                      6.7px 6.7px 5.3px rgba(0, 0, 0, 0.028),\n                      12.5px 12.5px 10px rgba(0, 0, 0, 0.035),\n                      22.3px 22.3px 17.9px rgba(0, 0, 0, 0.042),\n                      41.8px 41.8px 33.4px rgba(0, 0, 0, 0.05),\n                      100px 100px 80px rgba(0, 0, 0, 0.07)`\n        }}\n      >\n        <h1 css={{ color: \"#F1E9FB\", height: \"100%\" }}>\n          <Textfit\n            max={256}\n            min={24}\n            style={{\n              minHeight: \"80%\",\n              maxHeight: \"80%\",\n              lineHeight: 1\n            }}\n          >\n            How to make that the yack is shaved by itself or maybe not bla bla\n            bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla\n            bla bla bla bla.\n          </Textfit>\n        </h1>\n        <div\n          css={{\n            color: \"#F1E9FB\",\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            fontSize: 24\n          }}\n        >\n          <ul\n            css={{\n              listStyleType: \"none\",\n              display: \"flex\",\n              \"& li\": {\n                marginRight: \".5rem\",\n                \"&:not(:last-child):after\": {\n                  content: \"'Â·'\",\n                  fontWeight: \"600\",\n                  marginLeft: \".5rem\"\n                }\n              }\n            }}\n          >\n            <li>image</li>\n            <li>yack</li>\n          </ul>\n          <span>@theVoogie</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nrender(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}